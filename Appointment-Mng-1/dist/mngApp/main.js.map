{"version":3,"sources":["./src/app/c-register/c-register.component.ts","./src/app/c-register/c-register.component.html","./src/environments/environment.ts","./src/app/initial-page/initial-page.component.ts","./src/app/initial-page/initial-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/database.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {DatabaseService} from \"../database.service\";\n\n@Component({\n  selector: 'app-c-register',\n  templateUrl: './c-register.component.html',\n  styleUrls: ['./c-register.component.css']\n})\nexport class CRegisterComponent implements OnInit {\n  name = '';\n  phone = 0;\n  email = '';\n  password = '';\n  role = \"basic\";\n  aT=\"\";\n\n\n  constructor(private dbService: DatabaseService) { }\n\n  ngOnInit(): void {\n  }\n\n  cRegister(){\n    let user={email: this.email, role: this.role, password: this.password, name: this.name, phoneNumber: this.phone};\n    this.dbService.createUser(user).subscribe(result => console.log(result[\"accessToken\"]));\n  }\n\n}\n","<!--<h2>Customer Register</h2>-->\n<!DOCTYPE html>\n<script src=\"https://how2j.cn/study/js/jquery/2.0.0/jquery.min.js\"></script>\n<script src=\"https://cdn.staticfile.org/angular.js/1.4.6/angular.min.js\"></script>\n<link href=\"https://how2j.cn/study/css/bootstrap/3.3.6/bootstrap.min.css\" rel=\"stylesheet\">\n<script src=\"https://how2j.cn/study/js/bootstrap/3.3.6/bootstrap.min.js\"></script>\n\n\n\n  <body>\n<main class=\"form-signin\">\n\n    <h2 class=\"text-center\">Customer Register</h2>\n\n\n    <div class=\"form-group\">\n<!--      <label>Name</label>-->\n      <label for=\"customerName\">Name</label>\n      <input type=\"text\" class=\"form-control\" id=\"customerName\" [(ngModel)]=\"name\" name=\"cn\" placeholder=\"Name\">\n    </div>\n\n    <div class=\"form-group\">\n<!--      <label>Phone Number</label>-->\n      <label for=\"customerPN\">Phone Number</label>\n      <input type=\"text\" class=\"form-control\" id=\"customerPN\"  [(ngModel)]=\"phone\" name=\"pn\" placeholder=\"Phone Number\">\n    </div>\n\n    <div class=\"form-group\">\n<!--      <label>Email address</label>-->\n      <label for=\"customerEM\">Email address</label>\n      <input type=\"text\" class=\"form-control\" id=\"customerEM\" [(ngModel)]=\"email\" name=\"em\" placeholder=\"Email address\">\n    </div>\n\n    <div class=\"form-group\">\n<!--      <label>Initial password</label>-->\n      <label for=\"customerPW\">Initial password</label>\n      <input type=\"password\" class=\"form-control\" id=\"customerPW\" [(ngModel)]=\"password\" name=\"pw\" placeholder=\"Initial password\">\n    </div>\n\n      <button class=\"w-100 btn btn-lg btn-primary center-block\" type=\"submit\" (click)=\"cRegister()\">Register</button>\n\n</main>\n  </body>\n\n<!--<div class=\"b-example-divider\"></div>-->\n\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-initial-page',\n  templateUrl: './initial-page.component.html',\n  styleUrls: ['./initial-page.component.css']\n})\nexport class InitialPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--<p>initial-page works!</p>-->\n<!DOCTYPE html>\n<script src=\"https://how2j.cn/study/js/jquery/2.0.0/jquery.min.js\"></script>\n<script src=\"https://cdn.staticfile.org/angular.js/1.4.6/angular.min.js\"></script>\n<link href=\"https://how2j.cn/study/css/bootstrap/3.3.6/bootstrap.min.css\" rel=\"stylesheet\">\n<script src=\"https://how2j.cn/study/js/bootstrap/3.3.6/bootstrap.min.js\"></script>\n\n<body>\n<div class=\"container col-xxl-8 px-4 py-5\">\n  <div class=\"row flex-lg-row-reverse align-items-center g-5 py-5\">\n    <div class=\"col-10 col-sm-8 col-lg-6\">\n      <img src=\"assets/pika.jpg\" class=\"d-block mx-lg-auto img-fluid\" alt=\"Bootstrap Themes\" width=\"480\" height=\"480\" loading=\"lazy\" >\n    </div>\n    <div class=\"col-lg-6\">\n      <h1 class=\"display-5 fw-bold lh-1 mb-3\">Voucher Appointment System</h1>\n      <p class=\"lead\">Our system aims to assist you to experience a happy journey over voucher selection.</p>\n      <div class=\"d-grid gap-2 d-md-flex justify-content-md-start\">\n\n\n        <div class=\"col-xs-3\">\n          <button type=\"button\" class=\"btn btn-primary btn-lg px-4 me-md-2\">Sign in</button>\n        </div>\n\n        <div class=\"col-xs-3\">\n          <button type=\"button\" class=\"btn btn-outline-secondary btn-lg px-4\">Sign up</button>\n        </div>\n\n        <div class=\"col-xs-3\">\n          <button type=\"button\" class=\"btn btn-default btn-lg\">Admin sign in</button>\n        </div>\n\n\n      </div>\n    </div>\n  </div>\n</div>\n</body>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'mngApp';\n}\n","<app-c-register></app-c-register>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CRegisterComponent } from './c-register/c-register.component';\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { InitialPageComponent } from './initial-page/initial-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CRegisterComponent,\n    InitialPageComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\"Content-Type\": \"application/json\", \"Authorization\": 'my-auth-token'}),\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n\n  constructor(private http: HttpClient) {}\n  result: any;\n\n  createUser(user){\n    return this.http.post(\"/signup\", user);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}